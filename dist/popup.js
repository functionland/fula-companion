let currentPage=1;const itemsPerPage=10,ipfs_gateway="https://ipfs.cloud.fx.land";function showPinningProgress(e,n){showElement("pinningProgress");const t=document.getElementById("pinningStatusList"),i=document.createElement("li");i.id=`pinning-${e}`,i.textContent=n,t.appendChild(i)}function updatePinningStatus(e,n){const t=document.getElementById(`pinning-${e}`);t&&(t.textContent=n)}function removePinningStatus(e){setTimeout((()=>{const n=document.getElementById(`pinning-${e}`);n&&n.remove(),0===document.getElementById("pinningStatusList").children.length&&hideElement("pinningProgress")}),1e4)}async function saveApiKey(){const e=document.getElementById("apiKey").value.trim();if(e)try{await chrome.storage.local.set({apiKey:e}),showPinnedItems(e)}catch(e){showError("Failed to save API key: "+e.message)}else showError("Please enter a valid API key")}async function showPinnedItems(e){showLoading();try{renderPinnedItems(await fetchPinnedItems(e)),hideLoading(),showElement("pinnedItems"),hideElement("setup")}catch(e){hideLoading(),showError("Failed to fetch pinned items: "+e.message)}}async function fetchPinnedItems(e){try{const n=await fetch(`https://api.cloud.fx.land/pins?limit=${itemsPerPage}&offset=${(currentPage-1)*itemsPerPage}`,{headers:{Authorization:`Bearer ${e}`}});if(!n.ok){if(500===n.status)throw new Error("Fula API server error. Please try again later.");throw new Error(`HTTP error! status: ${n.status}`)}return await n.json()}catch(e){throw console.error("Error fetching pinned items:",e),e}}function renderPinnedItems(e){const n=document.getElementById("pinnedList");n.innerHTML="",e.results.forEach((e=>{const t=document.createElement("li"),i=document.createElement("a");i.href=`${ipfs_gateway}/gateway/${e.pin.cid}`,i.textContent=e.pin.name||"Unnamed",i.target="_blank",t.appendChild(i),n.appendChild(t)})),updatePagination(e.count)}function updatePagination(e){const n=Math.ceil(e/itemsPerPage);document.getElementById("pageInfo").textContent=`Page ${currentPage} of ${n}`,document.getElementById("prevPage").disabled=1===currentPage,document.getElementById("nextPage").disabled=currentPage===n}async function changePage(e){currentPage+=e;const{apiKey:n}=await chrome.storage.local.get("apiKey");showPinnedItems(n)}function showSetup(){showElement("setup"),hideElement("pinnedItems")}function showLoading(){showElement("loading")}function hideLoading(){hideElement("loading")}function showError(e){document.getElementById("error").querySelector("#errorMessage").textContent=e,showElement("error")}function showElement(e){document.getElementById(e).classList.remove("hidden")}function hideElement(e){document.getElementById(e).classList.add("hidden")}chrome.runtime.onMessage.addListener(((e,n,t)=>{"pinningStatus"===e.action&&("started"===e.status?showPinningProgress(e.id,"Saving the file..."):"uploading"===e.status?updatePinningStatus(e.id,"Uploading to Helia..."):"sending"===e.status?updatePinningStatus(e.id,"Sending request to Fula..."):"pinned"===e.status&&(updatePinningStatus(e.id,"Pinned successfully"),removePinningStatus(e.id)))})),document.addEventListener("DOMContentLoaded",(async function(){try{console.log("Sending initHelia message to background script");const e=await chrome.runtime.sendMessage({action:"initHelia"});if(console.log("Received response from background script:",e),!e||!e.success)throw new Error(e?e.error:"No response from background script");console.log("Helia node is running");const{apiKey:n}=await chrome.storage.local.get("apiKey");n?showPinnedItems(n):showSetup()}catch(e){showError("Failed to initialize Helia: "+e.message)}document.getElementById("saveApiKey").addEventListener("click",saveApiKey),document.getElementById("prevPage").addEventListener("click",(()=>changePage(-1))),document.getElementById("nextPage").addEventListener("click",(()=>changePage(1))),chrome.storage.local.get("pinningStatus",(e=>{const n=e.pinningStatus||{};Object.entries(n).forEach((([e,n])=>{"pinned"!==n.status&&"error"!==n.status&&showPinningProgress(e,`${n.status}: ${n.message}`)}))}))}));